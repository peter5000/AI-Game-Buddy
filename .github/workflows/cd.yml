name: Build and Deploy to Azure
on:
  workflow_run:
    # Wait for CI Checks to complete before running
    workflows: ["CI Checks"]
    types:
      - completed

jobs:
  # Build Docker image and push to ACR
  build:
    # Needs to have CI Checks succeed and be on main branch
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      short-tag: ${{ steps.set-short-tag.outputs.short-tag }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx with cache support
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master
            network=host
            
      # Restore Docker layer cache
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      # Log in to Azure Container Registry
      - name: Log in to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.ACR_NAME }}.azurecr.io/${{ github.repository }}
          tags: |
            type=sha,prefix=sha-,format=short
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Set short tag output
        id: set-short-tag
        run: |
          # Extract the short SHA tag (first line of metadata output)
          first_tag=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          echo "short-tag=$first_tag" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          
      # Move cache to avoid ever-growing cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # Deploy built image from ACR to Azure Container App
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Deploy to Azure Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          resourceGroup: 'my-ai-gaming-friend'
          containerAppName: 'myaigamingfriendcontainerjj'
          imageToDeploy: ${{ needs.build.outputs.short-tag }}
          registryUrl: ${{ secrets.ACR_NAME }}.azurecr.io
          registryUsername: ${{ secrets.ACR_USERNAME }}
          registryPassword: ${{ secrets.ACR_PASSWORD }}