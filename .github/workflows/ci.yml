name: CI Checks

on:
  push:

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Ruff
        run: pip install ruff
      - name: Run Ruff Checks
        working-directory: ./backend
        run: |
          ruff check . --fix
          ruff format .

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # The key identifies the cache. If requirements.txt changes,
          # the hash will change, and a new cache will be created.
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          # A restore key is used for partial matches
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        working-directory: ./backend
        run: pytest
